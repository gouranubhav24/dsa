Given an array of integers Arr of size N and a number K. Return the maximum sum of a subarray of size K.

NOTE*: A subarray is a contiguous part of any given array.

Example 1:

Input:
N = 4, K = 2
Arr = [100, 200, 300, 400]
Output:
700
Explanation:
Arr3  + Arr4 =700,
which is maximum.



class Solution:
    def maximumSumSubarray(self, K, Arr, N):
        # Initialize the maximum sum and the sum of the first window
        window_sum = sum(Arr[:K])
        maximum = window_sum
        
        # Slide the window across the array
        for i in range(1, N - K + 1):
            # Update the window sum by removing the first element of the previous window
            # and adding the next element
            window_sum = window_sum - Arr[i - 1] + Arr[i + K - 1]
            maximum = max(maximum, window_sum)
        
        return maximum
